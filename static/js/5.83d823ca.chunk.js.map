{"version":3,"sources":["components/Header.jsx","components/Experience.jsx"],"names":["Header","props","title","_jsx","className","children","styles","ulStyle","listStylePosition","paddingLeft","subtitleContainerStyle","marginTop","marginBottom","subtitleStyle","display","inlineChild","itemStyle","Experience","theme","useContext","ThemeContext","header","_useState","useState","_useState2","_slicedToArray","data","setData","useEffect","fetch","endpoints","experiences","method","then","res","json","catch","err","_jsxs","_Fragment","Container","Timeline","lineColor","timelineLineColor","map","item","Fade","TimelineItem","dateText","dateInnerStyle","background","accentColor","style","bodyContainerStyle","color","_objectSpread","subtitle","workType","workDescription","point","ReactMarkdown","components","p","FallbackSpinner"],"mappings":"6IAAA,6BAaeA,UATf,SAAgBC,GACd,IAAQC,EAAUD,EAAVC,MACR,OAAOC,cAAA,OAAKC,UAAU,SAAQC,SAAEH,GAClC,C,8JCKMI,EAAS,CACbC,QAAS,CACPC,kBAAmB,UACnBC,YAAa,IAEfC,uBAAwB,CACtBC,UAAW,GACXC,aAAc,IAEhBC,cAAe,CACbC,QAAS,gBAEXC,YAAa,CACXD,QAAS,gBAEXE,UAAW,CACTJ,aAAc,KAmFHK,UA/Ef,SAAoBhB,GAClB,IAAMiB,EAAQC,qBAAWC,KACjBC,EAAWpB,EAAXoB,OACRC,EAAwBC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAA/BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAWpB,OATAI,qBAAU,WACRC,MAAMC,IAAUC,YAAa,CAC3BC,OAAQ,QAEPC,MAAK,SAACC,GAAG,OAAKA,EAAIC,MAAM,IACxBF,MAAK,SAACC,GAAG,OAAKP,EAAQO,EAAIH,YAAY,IACtCK,OAAM,SAACC,GAAG,OAAKA,CAAG,GACvB,GAAG,IAGDC,eAAAC,WAAA,CAAAlC,SAAA,CACEF,cAACH,UAAM,CAACE,MAAOmB,IAEdK,EAEGvB,cAAA,OAAKC,UAAU,4BAA2BC,SACxCF,cAACqC,IAAS,CAAAnC,SACRF,cAACsC,WAAQ,CACPC,UAAWxB,EAAMyB,kBAAkBtC,SAElCqB,EAAKkB,KAAI,SAACC,GAAI,OACb1C,cAAC2C,IAAI,CAAAzC,SACHiC,eAACS,eAAY,CAEXC,SAAUH,EAAKG,SACfC,eAAgB,CAAEC,WAAYhC,EAAMiC,aACpCC,MAAO9C,EAAOU,UACdqC,mBAAoB,CAAEC,MAAOpC,EAAMoC,OAAQjD,SAAA,CAE3CF,cAAA,MAAIC,UAAU,aAAYC,SACvBwC,EAAK3C,QAERoC,eAAA,OAAKc,MAAO9C,EAAOI,uBAAuBL,SAAA,CACxCF,cAAA,MAAIiD,MAAKG,wBAAA,GAAOjD,EAAOO,eAAa,IAAEyC,MAAOpC,EAAMiC,cAAc9C,SAC9DwC,EAAKW,WAEPX,EAAKY,UACNnB,eAAA,MAAIc,MAAO9C,EAAOS,YAAYV,SAAA,CAAC,WAE5B,IACAwC,EAAKY,eAIVtD,cAAA,MAAIiD,MAAO9C,EAAOC,QAAQF,SACvBwC,EAAKa,gBAAgBd,KAAI,SAACe,GAAK,OAC9BrB,eAAA,OAAAjC,SAAA,CACEF,cAAA,MAAAE,SACEF,cAACyD,IAAa,CACZvD,SAAUsD,EACVE,WAAY,CACVC,EAAG,YAIT3D,cAAA,WATQwD,EAUJ,QAjCLd,EAAK3C,MAAQ2C,EAAKG,WAqCpB,UAKb7C,cAAC4D,UAAe,MAG5B,C","file":"static/js/5.83d823ca.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../App.css';\r\n\r\nfunction Header(props) {\r\n  const { title } = props;\r\n  return <div className=\"header\">{title}</div>;\r\n}\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport { Timeline, TimelineItem } from 'vertical-timeline-component-for-react';\r\nimport { Container } from 'react-bootstrap';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport PropTypes from 'prop-types';\r\nimport { ThemeContext } from 'styled-components';\r\nimport Fade from 'react-reveal';\r\nimport Header from './Header';\r\nimport endpoints from '../constants/endpoints';\r\nimport FallbackSpinner from './FallbackSpinner';\r\nimport '../css/experience.css';\r\n\r\nconst styles = {\r\n  ulStyle: {\r\n    listStylePosition: 'outside',\r\n    paddingLeft: 20,\r\n  },\r\n  subtitleContainerStyle: {\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n  },\r\n  subtitleStyle: {\r\n    display: 'inline-block',\r\n  },\r\n  inlineChild: {\r\n    display: 'inline-block',\r\n  },\r\n  itemStyle: {\r\n    marginBottom: 10,\r\n  },\r\n};\r\n\r\nfunction Experience(props) {\r\n  const theme = useContext(ThemeContext);\r\n  const { header } = props;\r\n  const [data, setData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(endpoints.experiences, {\r\n      method: 'GET',\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => setData(res.experiences))\r\n      .catch((err) => err);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Header title={header} />\r\n\r\n      {data\r\n        ? (\r\n          <div className=\"section-content-container\">\r\n            <Container>\r\n              <Timeline\r\n                lineColor={theme.timelineLineColor}\r\n              >\r\n                {data.map((item) => (\r\n                  <Fade>\r\n                    <TimelineItem\r\n                      key={item.title + item.dateText}\r\n                      dateText={item.dateText}\r\n                      dateInnerStyle={{ background: theme.accentColor }}\r\n                      style={styles.itemStyle}\r\n                      bodyContainerStyle={{ color: theme.color }}\r\n                    >\r\n                      <h2 className=\"item-title\">\r\n                        {item.title}\r\n                      </h2>\r\n                      <div style={styles.subtitleContainerStyle}>\r\n                        <h4 style={{ ...styles.subtitleStyle, color: theme.accentColor }}>\r\n                          {item.subtitle}\r\n                        </h4>\r\n                        {item.workType && (\r\n                        <h5 style={styles.inlineChild}>\r\n                    &nbsp;Â·\r\n                          {' '}\r\n                          {item.workType}\r\n                        </h5>\r\n                        )}\r\n                      </div>\r\n                      <ul style={styles.ulStyle}>\r\n                        {item.workDescription.map((point) => (\r\n                          <div key={point}>\r\n                            <li>\r\n                              <ReactMarkdown\r\n                                children={point}\r\n                                components={{\r\n                                  p: 'span',\r\n                                }}\r\n                              />\r\n                            </li>\r\n                            <br />\r\n                          </div>\r\n                        ))}\r\n                      </ul>\r\n                    </TimelineItem>\r\n                  </Fade>\r\n                ))}\r\n              </Timeline>\r\n            </Container>\r\n          </div>\r\n        ) : <FallbackSpinner /> }\r\n    </>\r\n  );\r\n}\r\n\r\nExperience.propTypes = {\r\n  header: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Experience;\r\n"],"sourceRoot":""}